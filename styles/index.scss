@use "sass:math";
@import "./font-public-sans";
@import "~tailwindcss/base";

@mixin button {
  @apply transition-all inline-flex items-center space-x-2 px-3 py-1 rounded-sm;
  @apply text-white bg-none hover:text-white hover:bg-purple-500;
  @apply border-2 border-purple-500 border-solid text-purple-500;
  @apply text-lg font-normal;

  &.naked {
    @apply bg-transparent hover:bg-transparent text-purple-400 hover:text-purple-500;
  }
}

body {
  min-height: 100vh;
}

#main {
  flex: 1;
}

svg {
  max-width: 100%;
  max-height: 100%;
}

.icon {
  path {
    @apply transition-all;
    fill: theme('colors.gray.800');
  }

  &:hover {
    path {
      fill: theme('colors.purple.500');
    }
  }
}

p,
span,
li,
ol,
ul,
i,
blockquote,
h1, h2, h3, h4, h5 {
  &:not(pre, pre *) {
    @apply text-gray-700 tracking-tight;
    font-family: 'Public Sans', sans-serif;
  }
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.alert {
  @apply relative text-gray-700 bg-green-100 py-4 px-3 rounded-sm border-2 border-green-300;

  @screen lg {
    @apply py-4 px-2;
  }

  &:before {
    @apply absolute w-6 h-6 pt-1 mt-1;
    content: '';
    display: block;
    background: url('/icons/info.svg') no-repeat;

    @screen lg {
      @apply w-8 h-8;
    }
  }

  p {
    @apply pl-8;
    margin: 0 !important;

    @screen lg {
      @apply pl-10;
    }
  }
}

.slice {
  $slice-width: 15rem;
  max-width: 100vw;

  @screen lg {
    width: calc(100% + #{$slice-width});
    transform: translateX(-#{math.div($slice-width, 2)});
  }
}

.divider {
  @apply border-0 bg-gray-300 w-full max-w-xl mx-auto;
  height: 1px;

  &.divider--wide {
    @apply max-w-5xl;
  }
}

#__next {
  @apply flex flex-col relative;
  min-height: 100vh;
  z-index: 1;
}

.stargazers {
  &:hover {
    svg {
      stroke: theme('colors.yellow.500');
    }
  }
}

.button {
  @include button;
}

span {
  @apply font-light;
}

:root {
  --gradient-angle: 0deg;
}

.light-text {
  @apply font-normal text-base text-gray-500;
}

.hoverable-block {
  &-container {
    position: relative;
    left: 50%;
    transform: translateX(-50%);

    @screen md {
      width: calc(100% + 4rem);
    }
  }

  .post-content {
    width: calc(100% - 2rem);

    @screen md {
      width: calc(100% - 4rem);
    }
  }

  &:hover {
    a {
      opacity: 1;
    }
  }

  &-container {
    &:hover {
      @apply bg-gray-100;
    }
  }
}

.gradient-text {
  padding-bottom: 1rem;
  transition: background .15s ease-in-out;
  background: linear-gradient(var(--gradient-angle), theme('colors.gray.500') 50%, theme('colors.gray.800') 50%);
  background-clip: text;
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;

  a {
    @apply bg-purple-400;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    -webkit-background-clip: text;

    &:hover {
      @apply bg-purple-500;
    }
  }
}

.post-content {
  p > div {
    display: block;
    overflow: auto;
  }

  // Do not make heading anchor links fancy.
  h2, h3, h4, h5, h5 {
    a {
      @apply text-gray-700;
      box-shadow: none;
      padding: 0;

      &:hover {
        padding: 0;
        box-shadow: none;
      }
    }
  }

  h2 {
    @screen md {
      font-size: theme('fontSize.3xl') !important;
    }
  }
}

.nav {
  input {
    &:checked {
      & ~ .nav-menu-wrapper .nav-menu-items {
        @apply opacity-100 visible;

        ul {
          @apply translate-x-0;
        }
      }

      & ~ .nav-menu-wrapper .nav-menu-label .menu-bar {
        @apply bg-white;

        &-1 {
          transform: translate3d(0, 1rem, 0) rotate(-45deg);
        }

        &-2 {
          opacity: 0;
        }

        &-3 {
          transform: translate3d(0, -1rem, 0) rotate(45deg);
        }
      }
    }
  }
}

form {
  input, textarea {
    @apply border border-gray-300 rounded-sm w-full px-2 py-2 text-base;
  }

  label {
    @apply mb-2 inline-block;
  }
}

@import "./jam-comments.scss";
@import "~tailwindcss/components";
@import "~tailwindcss/utilities";
